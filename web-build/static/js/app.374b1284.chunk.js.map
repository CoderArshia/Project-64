{"version":3,"sources":["screens/HomeScreen.js","App.js"],"names":["HomeScreen","getWord","word","searchKeyword","toLowerCase","fetch","then","data","status","json","response","wordData","definitions","definition","description","lexicalCategory","wordtype","setState","state","text","isSearchPressed","isLoading","View","style","flex","borderWidth","backgroundColor","centerComponent","color","fontSize","styles","inputBoxContainer","TextInput","inputBox","onChangeText","examples","value","this","TouchableOpacity","searchButton","onPress","Text","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","Component","StyleSheet","create","container","alignItems","width","alignSelf","height","textAlign","margin","borderRadius","fontWeight","App"],"mappings":"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","file":"static/js/app.374b1284.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport { Header } from 'react-native-elements';\r\nexport default class HomeScreen extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      text: '',\r\n      isSearchPressed: false,\r\n      isLoading: false,\r\n      word  : \"Loading...\",\r\n      lexicalCategory :'',\r\n      definition : \"\"\r\n    };\r\n  }\r\n\r\n  getWord=(word)=>{\r\n    var searchKeyword=word.toLowerCase()\r\n    var url = \"https://rupinwhitehatjr.github.io/dictionary/\"+searchKeyword+\".json\"\r\n    //console.log(url)\r\n    return fetch(url)\r\n    .then((data)=>{\r\n      if(data.status===200)\r\n      {\r\n        return data.json()\r\n      }\r\n      else\r\n      {\r\n        return null\r\n      }\r\n    })\r\n    .then((response)=>{\r\n        //console.log(response)\r\n\r\n        var responseObject = response\r\n        //var word = responseObject.word\r\n        //var lexicalCategory = responseObject.results[0].lexicalEntries[0].lexicalCategory.text\r\n        if(responseObject)\r\n        {\r\n          var wordData = responseObject.definitions[0]\r\n          //console.log(responseObject.definitions[0])\r\n          var definition=wordData.description\r\n          var lexicalCategory=wordData.wordtype\r\n          //console.log(lexicalCategory)\r\n          this.setState({\r\n            \"word\" : this.state.text, \r\n            \"definition\" :definition,\r\n            \"lexicalCategory\": lexicalCategory     \r\n            \r\n          })\r\n        }\r\n        else\r\n        {\r\n          this.setState({\r\n            \"word\" : this.state.text, \r\n            \"definition\" :\"Not Found\",\r\n            \r\n          })\r\n\r\n        }\r\n    \r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <View style={{flex:1, borderWidth:2}}>\r\n        <Header\r\n          backgroundColor={'purple'}\r\n          centerComponent={{\r\n            text: 'Pocket Dictionary',\r\n            style: { color: '#fff', fontSize: 20 },\r\n          }}\r\n        />\r\n        <View style={styles.inputBoxContainer}>\r\n        \r\n          <TextInput\r\n            style={styles.inputBox}\r\n            onChangeText={text => {\r\n              this.setState({\r\n                text: text,\r\n                isSearchPressed: false,\r\n                word  : \"Loading...\",\r\n                lexicalCategory :'',\r\n                examples : [],\r\n                definition : \"\"\r\n              });\r\n            }}\r\n            value={this.state.text}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            style={styles.searchButton}\r\n            onPress={() => {\r\n              this.setState({ isSearchPressed: true });\r\n              this.getWord(this.state.text)\r\n            }}>\r\n            <Text style={styles.searchText}>Search</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.outputContainer}>\r\n          <Text style={{fontSize:20}}>\r\n            {\r\n              this.state.isSearchPressed && this.state.word === \"Loading...\"\r\n              ? this.state.word\r\n              : \"\"\r\n            }\r\n          </Text>\r\n            {\r\n              this.state.word !== \"Loading...\" ?\r\n              (\r\n                <View style={{justifyContent:'center', marginLeft:10 }}>\r\n                  <View style={styles.detailsContainer}>\r\n                    <Text style={styles.detailsTitle}>\r\n                      Word :{\" \"}\r\n                    </Text>\r\n                    <Text style={{fontSize:18 }}>\r\n                      {this.state.word}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.detailsContainer}>\r\n                    <Text style={styles.detailsTitle}>\r\n                      Type :{\" \"}\r\n                    </Text>\r\n                    <Text style={{fontSize:18}}>\r\n                      {this.state.lexicalCategory}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={{flexDirection:'row',flexWrap: 'wrap'}}>\r\n                    <Text style={styles.detailsTitle}>\r\n                      Definition :{\" \"}\r\n                    </Text>\r\n                    <Text style={{ fontSize:18}}>\r\n                      {this.state.definition}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n              :null\r\n            }\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  inputBoxContainer: {\r\n    flex:0.3,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  inputBox: {\r\n    width: '80%',\r\n    alignSelf: 'center',\r\n    height: 40,\r\n    textAlign: 'center',\r\n    borderWidth: 4,\r\n  },\r\n  searchButton: {\r\n    width: '40%',\r\n    height: 40,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 10,\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n  },\r\n  searchText:{\r\n    fontSize: 20,\r\n    fontWeight: 'bold'\r\n  },\r\n  outputContainer:{\r\n    flex:0.7,\r\n    alignItems:'center'\r\n  },\r\n  detailsContainer:{\r\n    flexDirection:'row',\r\n    alignItems:'center'\r\n  },\r\n  detailsTitle:{\r\n    color:'orange',\r\n    fontSize:20,\r\n    fontWeight:'bold'\r\n  }\r\n});","import React, { Component } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport HomeScreen from './screens/HomeScreen';\n\nexport default class App extends Component{\n  render(){\n    return(\n      <View style={{flex:1}}>\n        <HomeScreen />\n      </View>\n    )\n  }\n}\n"],"sourceRoot":""}